name: 'my action'
description: 'my action unit'
author: 'rcmdnk'
branding:
  icon: 'meh'
  color: 'gray-dark'
inputs:
  workingdirectory:
    description: 'working directory'
    required: false
    default: './'
  tag:
    description: 'version'
    required: true
    default: 'v0.0.1'
  GITHUB_TOKEN:
    description: 'GITHUB_TOKEN'
    required: true
    default: 'GITHUB_TOKEN'
  zip_name:
    description: 'The name of the zip file for releasing'
    required: false
    default: 'release.zip'
  platform:
    description: 'The platform for releasing'
    required: false
    default: 'win' #win,mac,linux
  title:
    description: 'The title for releasing'
    required: false
    default: 'title' 
  width:
    description: 'The width of this game'
    required: false
    default: '1920' 
  height:
    description: 'The height of this game'
    required: false
    default: '1080' 
  game_name:
    description: 'The game name'
    required: false
    default: 'game' 

runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm install -g tyranoscript-packager
      shell: bash
      working-directory: ${{ inputs.workingdirectory }}
    - run: sudo apt install zip -y
      shell: bash
    - run: tyrano -p ${{inputs.platform}} -t ${{inputs.title}} -w ${{inputs.width}} -H ${{inputs.height}} -d ${{inputs.game_name}} -e ${{inputs.game_name}}
      shell: bash
      working-directory: ${{ inputs.workingdirectory }}
    - run: zip -r ${{ inputs.zip_name }} ${{inputs.game_name}}
      shell: bash
      working-directory: ${{ inputs.workingdirectory }}
    - name: Create release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      with:
        tag_name: ${{ inputs.tag }}
        release_name: Release ${{ inputs.tag }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.workingdirectory }}/${{ inputs.zip_name }}
        asset_name: ${{ inputs.zip_name }}
        asset_content_type: application/zip
  